{"version":3,"sources":["Header.js","loading.gif","Comments.js","Body.js","App.js","index.js"],"names":["Header","currentSub","setCurrentSub","useState","search","setSearch","className","onSubmit","e","preventDefault","type","name","placeholder","onChange","target","value","onClick","id","Comments","comments","commentLoading","loadingIcon","scrollY","scrollToPost","window","scrollTo","document","addEventListener","querySelector","Math","floor","classList","add","remove","length","src","alt","map","comment","Fragment","data","author","body","replies","children","reply","Body","posts","postLoading","setComments","commentLink","setCommentLink","setCommentLoading","setScrollY","useEffect","getComments","CORS","REDDIT","a","axios","get","res","console","log","shortenNumbers","num","slice","post","parent_id","url_overridden_by_dest","href","title","selftext","url","is_video","thumbnail","permalink","controls","muted","poster","media","reddit_video","fallback_url","subreddit","ups","num_comments","total_awards_received","App","setPosts","setPostLoading","getPosts","URL","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4084bc4b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction Header({ currentSub, setCurrentSub }) {\r\n  const [search, setSearch] = useState()\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    setCurrentSub(search)\r\n  }\r\n  const onChange = (e) => {\r\n    setSearch(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className='header'>\r\n      <div className='logo'>\r\n        <h2>Light Reddit</h2>\r\n        <form onSubmit={onSubmit}>\r\n          <input\r\n            type='text'\r\n            name='search'\r\n            placeholder='Search Subreddit'\r\n            onChange={onChange}\r\n          />\r\n        </form>\r\n      </div>\r\n      <nav>\r\n        <div>\r\n          <p className='current-sub'>r/{currentSub}</p>\r\n          <p onClick={() => setCurrentSub('popular')}>POPULAR</p>\r\n          <p onClick={() => setCurrentSub('worldnews')}>WORLD NEWS</p>\r\n          <p onClick={() => setCurrentSub('AskReddit')}>ASK REDDIT</p>\r\n        </div>\r\n        <select name='' id='' onChange={(e) => setCurrentSub(e.target.value)}>\r\n          <option value='roastme'>Roastme</option>\r\n          <option value='pics'>Pics</option>\r\n          <option value='programming'>Programming</option>\r\n          <option value='programmerhumor'>Programmer Humor</option>\r\n          <option value='incelswithouthate'>IWH</option>\r\n          <option value='femaledatingstrategy'>FDS</option>\r\n          <option value='humansbeingbros'>humans Being Bros</option>\r\n          <option value='cursedcomments'>Cursed Comments</option>\r\n          <option value='rareinsults'>Rare Insults</option>\r\n          <option value='todayilearned'>Today I Learned</option>\r\n        </select>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","export default __webpack_public_path__ + \"static/media/loading.bad0cd25.gif\";","import React from 'react'\r\n\r\nfunction Comments({ comments, commentLoading, loadingIcon, scrollY }) {\r\n  const scrollToPost = () => {\r\n    window.scrollTo(0, scrollY)\r\n  }\r\n\r\n  //hide showpost btn\r\n  document.addEventListener('scroll', () => {\r\n    if (document.querySelector('.btn-showpost')) {\r\n      if (\r\n        window.scrollY >= Math.floor(scrollY) - 500 &&\r\n        window.scrollY <= Math.floor(scrollY) + 500\r\n      ) {\r\n        document.querySelector('.btn-showpost').classList.add('btn-hide')\r\n      } else {\r\n        document.querySelector('.btn-showpost').classList.remove('btn-hide')\r\n      }\r\n    }\r\n  })\r\n\r\n  if (comments.length === 0) {\r\n    return (\r\n      <div className='comments'>\r\n        <div className='comments-icon'>\r\n          <i className='far fa-comment-dots'></i>\r\n          <p className='title'>Comments ({comments.length})</p>\r\n          <button className='btn btn-showpost' onClick={scrollToPost}>\r\n            Show post\r\n          </button>\r\n        </div>\r\n        <div className='comment-loading'>\r\n          <p>Select a post to see comments</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else if (commentLoading === true) {\r\n    return (\r\n      <div className='comments'>\r\n        <div className='comments-icon'>\r\n          <i className='far fa-comment-dots'></i>\r\n          <p className='title'>Comments ({comments.length})</p>\r\n        </div>\r\n        <div className='comment-loading'>\r\n          <img src={loadingIcon} alt='' />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className='comments'>\r\n      <div className='comments-icon'>\r\n        <i className='far fa-comment-dots'></i>\r\n        <p className='title'>Comments ({comments.length})</p>\r\n        <button className='btn btn-showpost' onClick={scrollToPost}>\r\n          Show post\r\n        </button>\r\n      </div>\r\n      {comments.map((comment) => (\r\n        <React.Fragment key={comment.data.id}>\r\n          <div className='comment'>\r\n            <p className='username'>{comment.data.author}</p>\r\n            <p>{comment.data.body}</p>\r\n          </div>\r\n          {comment.data.replies && (\r\n            <details>\r\n              <summary>\r\n                Replies ({comment.data.replies.data.children.length})\r\n              </summary>\r\n\r\n              {comment.data.replies.data.children.map((reply) => (\r\n                <div className='reply' key={reply.data.id}>\r\n                  <p className='reply-username'>{reply.data.author}</p>\r\n                  <p>\r\n                    <span className='mention-username'>\r\n                      {comment.data.author}\r\n                    </span>\r\n                    {reply.data.body}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </details>\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comments\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport loadingIcon from './loading.gif'\r\nimport Comments from './Comments'\r\nimport parse from 'html-react-parser'\r\n\r\nfunction Body({ posts, setCurrentSub, postLoading }) {\r\n  const [comments, setComments] = useState([])\r\n  const [commentLink, setCommentLink] = useState()\r\n  const [commentLoading, setCommentLoading] = useState(false)\r\n  const [scrollY, setScrollY] = useState()\r\n\r\n  useEffect(() => {\r\n    getComments()\r\n  }, [commentLink])\r\n\r\n  const CORS = 'https://cors-anywhere.herokuapp.com/'\r\n  const REDDIT = 'https://www.reddit.com'\r\n\r\n  const getComments = async () => {\r\n    try {\r\n      setCommentLoading(true)\r\n      const res = await axios.get(commentLink)\r\n      const data = await res.data[1].data.children\r\n      setComments(data)\r\n      setCommentLoading(false)\r\n      setScrollY(window.scrollY)\r\n      console.log(data)\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  //Shrten like and comment numbers\r\n  function shortenNumbers(num) {\r\n    if (num <= 1000) {\r\n      return num\r\n    }\r\n    if (num >= 1000 && num < 10000) {\r\n      return num.slice(0, -3) + '.' + num.slice(1, -2) + 'k'\r\n    }\r\n    if (num >= 10000 && num < 100000) {\r\n      return num.slice(0, -3) + 'k'\r\n    }\r\n    if (num >= 100000 < 1000000) {\r\n      return num.slice(0, -3) + 'k'\r\n    }\r\n    if (num >= 1000000 < 10000000) {\r\n      return num.slice(0, -6) + 'm'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='body'>\r\n      <div className='main'>\r\n        {postLoading ? (\r\n          <div className='post-loading'>\r\n            <img src={loadingIcon} alt='' />\r\n          </div>\r\n        ) : (\r\n          posts.map((post) => (\r\n            <div\r\n              className={\r\n                comments[0] &&\r\n                comments[0].data.parent_id.slice(3) === post.data.id\r\n                  ? 'post active-post'\r\n                  : 'post'\r\n              }\r\n              key={post.data.id}>\r\n              <div className='post-wrapper'>\r\n                {post.data.url_overridden_by_dest &&\r\n                post.data.url_overridden_by_dest.slice(-3) !== 'jpg' &&\r\n                post.data.url_overridden_by_dest.slice(-3) !== 'png' &&\r\n                post.data.url_overridden_by_dest.slice(-3) !== 'gif' ? (\r\n                  <a\r\n                    href={post.data.url_overridden_by_dest}\r\n                    className='title title-link'\r\n                    target='_blank'>\r\n                    {post.data.title}\r\n                  </a>\r\n                ) : (\r\n                  <p className='title'>{post.data.title}</p>\r\n                )}\r\n                {post.data.selftext !== '' && (\r\n                  <p className='text'>{post.data.selftext}</p>\r\n                )}\r\n\r\n                {post.data.url &&\r\n                post.data.url.slice(-3) !== 'jpg' &&\r\n                post.data.url.slice(-3) !== 'png' &&\r\n                post.data.url.slice(-3) !== 'gif' &&\r\n                post.data.is_video !== true ? (\r\n                  <img\r\n                    src={post.data.thumbnail}\r\n                    alt=''\r\n                    onClick={() =>\r\n                      setCommentLink(\r\n                        `${CORS}${REDDIT}${post.data.permalink}.json`\r\n                      )\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={post.data.url}\r\n                    alt=''\r\n                    onClick={() =>\r\n                      setCommentLink(\r\n                        `${CORS}${REDDIT}${post.data.permalink}.json`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n\r\n                {/* Original image fetching */}\r\n                {/* {post.data.url !== '' && (\r\n                  <img\r\n                    src={post.data.url}\r\n                    alt=''\r\n                    onClick={() =>\r\n                      setCommentLink(\r\n                        `${CORS}${REDDIT}${post.data.permalink}.json`\r\n                      )\r\n                    }\r\n                  />\r\n                )} */}\r\n\r\n                {post.data.is_video === true && (\r\n                  <video\r\n                    controls\r\n                    muted={false}\r\n                    poster={post.data.thumbnail}\r\n                    src={post.data.media.reddit_video.fallback_url}></video>\r\n                )}\r\n\r\n                {/* Second Image */}\r\n                {post.data.url !== '' && (\r\n                  <>\r\n                    {/* <img\r\n                      src={post.data.thumbnail}\r\n                      alt=''\r\n                      onClick={() =>\r\n                        setCommentLink(\r\n                          `${CORS}${REDDIT}${post.data.permalink}.json`\r\n                        )\r\n                      }\r\n                    /> */}\r\n\r\n                    {/* working */}\r\n                    {/* <div className='iframe'>\r\n                      {post.data.media &&\r\n                        parse(parse(`${post.data.media.oembed.html}`))}\r\n                    </div> */}\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className='post-footer'>\r\n                <p\r\n                  className='subreddit-name'\r\n                  onClick={() => setCurrentSub(post.data.subreddit)}>\r\n                  r/{post.data.subreddit}\r\n                </p>\r\n                <p className='username'>{post.data.author}</p>\r\n                <p>\r\n                  <i className='far fa-heart'></i>\r\n                  {shortenNumbers(`${post.data.ups}`)}\r\n                </p>\r\n                <p\r\n                  className='comment-btn'\r\n                  onClick={() =>\r\n                    setCommentLink(\r\n                      `${CORS}${REDDIT}${post.data.permalink}.json`\r\n                    )\r\n                  }>\r\n                  <i className='far fa-comment-dots'></i>\r\n                  {shortenNumbers(`${post.data.num_comments}`)}\r\n                </p>\r\n\r\n                <p>\r\n                  <i className='fas fa-award'></i>\r\n                  {post.data.total_awards_received}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      <Comments\r\n        scrollY={scrollY}\r\n        comments={comments}\r\n        loadingIcon={loadingIcon}\r\n        commentLoading={commentLoading}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Body\r\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Header from './Header'\nimport Body from './Body'\nimport axios from 'axios'\n\nfunction App() {\n  const [currentSub, setCurrentSub] = useState('popular')\n  const [posts, setPosts] = useState([])\n  const [postLoading, setPostLoading] = useState(false)\n\n  useEffect(() => {\n    getPosts()\n  }, [currentSub])\n\n  const CORS = 'https://cors-anywhere.herokuapp.com/'\n  const URL = `https://www.reddit.com/r/${currentSub}.json`\n\n  const getPosts = async () => {\n    try {\n      setPostLoading(true)\n      const res = await axios.get(`${CORS}${URL}`)\n      const data = await res.data.data.children\n      setPosts(data)\n      console.log(data)\n      setPostLoading(false)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  return (\n    <div className='App'>\n      <Header currentSub={currentSub} setCurrentSub={setCurrentSub} />\n      <Body\n        postLoading={postLoading}\n        posts={posts}\n        setCurrentSub={setCurrentSub}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}